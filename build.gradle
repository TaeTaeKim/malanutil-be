plugins {
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.25'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.jetbrains.kotlin.jvm'
}

ext {
    springCloudVersion = "2024.0.1"
}

group = 'taeyun'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    testImplementation 'org.springframework.security:spring-security-test'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-reactor'
    implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0")
    implementation("org.springframework.boot:spring-boot-starter-webflux")
    // validation
    implementation("org.springframework.boot:spring-boot-starter-validation")


    // configurations
    annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")

    // postgres driver
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.7.3'

    // exposed
    implementation 'org.jetbrains.exposed:exposed-core:1.0.0-beta-2'
    implementation 'org.jetbrains.exposed:exposed-crypt:1.0.0-beta-2'
    implementation 'org.jetbrains.exposed:exposed-dao:1.0.0-beta-2'
    implementation 'org.jetbrains.exposed:exposed-jdbc:1.0.0-beta-2'
    implementation 'org.jetbrains.exposed:exposed-kotlin-datetime:1.0.0-beta-2'
    implementation 'org.jetbrains.exposed:exposed-json:1.0.0-beta-2'
    implementation 'org.jetbrains.exposed:exposed-money:1.0.0-beta-2'
    implementation 'org.jetbrains.exposed:exposed-spring-boot-starter:1.0.0-beta-2'

    // kotest
    testImplementation("io.kotest:kotest-runner-junit5:5.4.2")
    testImplementation("io.kotest:kotest-assertions-core:5.4.2")
    testImplementation("io.kotest.extensions:kotest-extensions-spring:1.1.2")
    testImplementation("com.h2database:h2")

    // mockk
    testImplementation("io.mockk:mockk:1.13.8")

    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt
    implementation("io.jsonwebtoken:jjwt:0.12.6")

    // logging
    implementation 'io.github.oshai:kotlin-logging-jvm:7.0.3'

    // JDA
    implementation("net.dv8tion:JDA:5.6.1")

    // minio
    implementation("io.minio:minio:8.5.17")

    // serialization
    implementation("org.apache.commons:commons-lang3:3.18.0")
    
    // observability - Java Agent approach
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'io.opentelemetry:opentelemetry-extension-kotlin'
}

kotlin {
    compilerOptions {
        freeCompilerArgs.addAll '-Xjsr305=strict'
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
