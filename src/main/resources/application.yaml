server:
  port: 8080

spring:
  datasource:
    url: jdbc:postgresql://${alerter.postgresql.ip}:${alerter.postgresql.port}/${alerter.postgresql.database}?rewriteBatchedInserts=true
  autoconfigure:
    # 직접 구현한 UserService 사용
    exclude: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration
  servlet:
    multipart:
      max-file-size: 20MB
      max-request-size: 20MB
  security:
    oauth2:
      client:
        registration:
          discord:
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope:
              - identify
              - email
              - guilds.join
            client-name: discord
        provider:
          discord:
            authorizationUri: https://discordapp.com/oauth2/authorize
            tokenUri: https://discordapp.com/api/oauth2/token
            userInfoUri: https://discordapp.com/api/users/@me
            user-name-attribute: username
# Observability Configuration - Java Agent handles tracing
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
